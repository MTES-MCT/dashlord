{"totalCount":30,"grade":"F","repositories":[{"url":"https://github.com/MTES-MCT/camino","grade":"F","alerts":[{"number":113,"created_at":"2025-03-04T16:20:38Z","updated_at":"2025-03-04T16:20:38Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/113","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/113","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"js/log-injection","severity":"error","description":"Log injection","name":"js/log-injection","tags":["external/cwe/cwe-117","security"],"full_description":"Building log entries from user-controlled sources is vulnerable to insertion of forged log entries by a malicious user.","help":"# Log injection\nIf unsanitized user input is written to a log entry, a malicious user may be able to forge new log entries.\n\nForgery can occur if a user provides some input with characters that are interpreted when the log output is displayed. If the log is displayed as a plain text file, then new line characters can be used by a malicious user. If the log is displayed as HTML, then arbitrary HTML may be included to spoof log entries.\n\n\n## Recommendation\nUser input should be suitably sanitized before it is logged.\n\nIf the log entries are in plain text then line breaks should be removed from user input, using `String.prototype.replace` or similar. Care should also be taken that user input is clearly marked in log entries.\n\nFor log entries that will be displayed in HTML, user input should be HTML-encoded before being logged, to prevent forgery and other forms of HTML injection.\n\n\n## Example\nIn the first example, a username, provided by the user, is logged using \\`console.info\\`. In the first case, it is logged without any sanitization. In the second case, the username is used to build an error that is logged using \\`console.error\\`. If a malicious user provides \\`username=Guest%0a\\[INFO\\]+User:+Admin%0a\\` as a username parameter, the log entry will be splitted in two different lines, where the second line will be \\`\\[INFO\\]+User:+Admin\\`.\n\n\n```javascript\nconst http = require('http');\nconst url = require('url');\n\nconst server = http.createServer((req, res) => {\n    let q = url.parse(req.url, true);\n\n    console.info(`[INFO] User: ${q.query.username}`); // BAD: User input logged as-is\n})\n\nserver.listen(3000, '127.0.0.1', () => {});\n\n```\nIn the second example, `String.prototype.replace` is used to ensure no line endings are present in the user input.\n\n\n```javascript\nconst http = require('http');\nconst url = require('url');\n\nconst server = http.createServer((req, res) => {\n    let q = url.parse(req.url, true);\n\n    // GOOD: remove newlines from user controlled input before logging\n    let username = q.query.username.replace(/\\n|\\r/g, \"\");\n\n    console.info(`[INFO] User: ${username}`);\n});\n\nserver.listen(3000, '127.0.0.1', () => {});\n\n```\n\n## References\n* OWASP: [Log Injection](https://www.owasp.org/index.php/Log_Injection).\n* Common Weakness Enumeration: [CWE-117](https://cwe.mitre.org/data/definitions/117.html).\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:javascript-typescript\",\"language\":\"javascript-typescript\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:javascript-typescript","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Log entry depends on a user-provided value."},"location":{"path":"packages/api/tests/keycloak.ts","start_line":25,"end_line":25,"start_column":47,"end_column":54},"classifications":["test"]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/113/instances","dismissal_approved_by":null},{"number":112,"created_at":"2025-03-04T16:20:38Z","updated_at":"2025-03-04T16:20:38Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/112","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/112","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"js/log-injection","severity":"error","description":"Log injection","name":"js/log-injection","tags":["external/cwe/cwe-117","security"],"full_description":"Building log entries from user-controlled sources is vulnerable to insertion of forged log entries by a malicious user.","help":"# Log injection\nIf unsanitized user input is written to a log entry, a malicious user may be able to forge new log entries.\n\nForgery can occur if a user provides some input with characters that are interpreted when the log output is displayed. If the log is displayed as a plain text file, then new line characters can be used by a malicious user. If the log is displayed as HTML, then arbitrary HTML may be included to spoof log entries.\n\n\n## Recommendation\nUser input should be suitably sanitized before it is logged.\n\nIf the log entries are in plain text then line breaks should be removed from user input, using `String.prototype.replace` or similar. Care should also be taken that user input is clearly marked in log entries.\n\nFor log entries that will be displayed in HTML, user input should be HTML-encoded before being logged, to prevent forgery and other forms of HTML injection.\n\n\n## Example\nIn the first example, a username, provided by the user, is logged using \\`console.info\\`. In the first case, it is logged without any sanitization. In the second case, the username is used to build an error that is logged using \\`console.error\\`. If a malicious user provides \\`username=Guest%0a\\[INFO\\]+User:+Admin%0a\\` as a username parameter, the log entry will be splitted in two different lines, where the second line will be \\`\\[INFO\\]+User:+Admin\\`.\n\n\n```javascript\nconst http = require('http');\nconst url = require('url');\n\nconst server = http.createServer((req, res) => {\n    let q = url.parse(req.url, true);\n\n    console.info(`[INFO] User: ${q.query.username}`); // BAD: User input logged as-is\n})\n\nserver.listen(3000, '127.0.0.1', () => {});\n\n```\nIn the second example, `String.prototype.replace` is used to ensure no line endings are present in the user input.\n\n\n```javascript\nconst http = require('http');\nconst url = require('url');\n\nconst server = http.createServer((req, res) => {\n    let q = url.parse(req.url, true);\n\n    // GOOD: remove newlines from user controlled input before logging\n    let username = q.query.username.replace(/\\n|\\r/g, \"\");\n\n    console.info(`[INFO] User: ${username}`);\n});\n\nserver.listen(3000, '127.0.0.1', () => {});\n\n```\n\n## References\n* OWASP: [Log Injection](https://www.owasp.org/index.php/Log_Injection).\n* Common Weakness Enumeration: [CWE-117](https://cwe.mitre.org/data/definitions/117.html).\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:javascript-typescript\",\"language\":\"javascript-typescript\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:javascript-typescript","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Log entry depends on a user-provided value."},"location":{"path":"packages/api/src/server/rest.ts","start_line":336,"end_line":336,"start_column":72,"end_column":80},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/112/instances","dismissal_approved_by":null},{"number":111,"created_at":"2025-03-04T16:20:38Z","updated_at":"2025-03-04T16:20:38Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/111","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/111","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"js/log-injection","severity":"error","description":"Log injection","name":"js/log-injection","tags":["external/cwe/cwe-117","security"],"full_description":"Building log entries from user-controlled sources is vulnerable to insertion of forged log entries by a malicious user.","help":"# Log injection\nIf unsanitized user input is written to a log entry, a malicious user may be able to forge new log entries.\n\nForgery can occur if a user provides some input with characters that are interpreted when the log output is displayed. If the log is displayed as a plain text file, then new line characters can be used by a malicious user. If the log is displayed as HTML, then arbitrary HTML may be included to spoof log entries.\n\n\n## Recommendation\nUser input should be suitably sanitized before it is logged.\n\nIf the log entries are in plain text then line breaks should be removed from user input, using `String.prototype.replace` or similar. Care should also be taken that user input is clearly marked in log entries.\n\nFor log entries that will be displayed in HTML, user input should be HTML-encoded before being logged, to prevent forgery and other forms of HTML injection.\n\n\n## Example\nIn the first example, a username, provided by the user, is logged using \\`console.info\\`. In the first case, it is logged without any sanitization. In the second case, the username is used to build an error that is logged using \\`console.error\\`. If a malicious user provides \\`username=Guest%0a\\[INFO\\]+User:+Admin%0a\\` as a username parameter, the log entry will be splitted in two different lines, where the second line will be \\`\\[INFO\\]+User:+Admin\\`.\n\n\n```javascript\nconst http = require('http');\nconst url = require('url');\n\nconst server = http.createServer((req, res) => {\n    let q = url.parse(req.url, true);\n\n    console.info(`[INFO] User: ${q.query.username}`); // BAD: User input logged as-is\n})\n\nserver.listen(3000, '127.0.0.1', () => {});\n\n```\nIn the second example, `String.prototype.replace` is used to ensure no line endings are present in the user input.\n\n\n```javascript\nconst http = require('http');\nconst url = require('url');\n\nconst server = http.createServer((req, res) => {\n    let q = url.parse(req.url, true);\n\n    // GOOD: remove newlines from user controlled input before logging\n    let username = q.query.username.replace(/\\n|\\r/g, \"\");\n\n    console.info(`[INFO] User: ${username}`);\n});\n\nserver.listen(3000, '127.0.0.1', () => {});\n\n```\n\n## References\n* OWASP: [Log Injection](https://www.owasp.org/index.php/Log_Injection).\n* Common Weakness Enumeration: [CWE-117](https://cwe.mitre.org/data/definitions/117.html).\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:javascript-typescript\",\"language\":\"javascript-typescript\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:javascript-typescript","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Log entry depends on a user-provided value."},"location":{"path":"packages/api/src/server/rest.ts","start_line":331,"end_line":331,"start_column":89,"end_column":97},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/111/instances","dismissal_approved_by":null},{"number":110,"created_at":"2025-03-04T16:20:38Z","updated_at":"2025-03-04T16:20:38Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/110","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/110","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"js/log-injection","severity":"error","description":"Log injection","name":"js/log-injection","tags":["external/cwe/cwe-117","security"],"full_description":"Building log entries from user-controlled sources is vulnerable to insertion of forged log entries by a malicious user.","help":"# Log injection\nIf unsanitized user input is written to a log entry, a malicious user may be able to forge new log entries.\n\nForgery can occur if a user provides some input with characters that are interpreted when the log output is displayed. If the log is displayed as a plain text file, then new line characters can be used by a malicious user. If the log is displayed as HTML, then arbitrary HTML may be included to spoof log entries.\n\n\n## Recommendation\nUser input should be suitably sanitized before it is logged.\n\nIf the log entries are in plain text then line breaks should be removed from user input, using `String.prototype.replace` or similar. Care should also be taken that user input is clearly marked in log entries.\n\nFor log entries that will be displayed in HTML, user input should be HTML-encoded before being logged, to prevent forgery and other forms of HTML injection.\n\n\n## Example\nIn the first example, a username, provided by the user, is logged using \\`console.info\\`. In the first case, it is logged without any sanitization. In the second case, the username is used to build an error that is logged using \\`console.error\\`. If a malicious user provides \\`username=Guest%0a\\[INFO\\]+User:+Admin%0a\\` as a username parameter, the log entry will be splitted in two different lines, where the second line will be \\`\\[INFO\\]+User:+Admin\\`.\n\n\n```javascript\nconst http = require('http');\nconst url = require('url');\n\nconst server = http.createServer((req, res) => {\n    let q = url.parse(req.url, true);\n\n    console.info(`[INFO] User: ${q.query.username}`); // BAD: User input logged as-is\n})\n\nserver.listen(3000, '127.0.0.1', () => {});\n\n```\nIn the second example, `String.prototype.replace` is used to ensure no line endings are present in the user input.\n\n\n```javascript\nconst http = require('http');\nconst url = require('url');\n\nconst server = http.createServer((req, res) => {\n    let q = url.parse(req.url, true);\n\n    // GOOD: remove newlines from user controlled input before logging\n    let username = q.query.username.replace(/\\n|\\r/g, \"\");\n\n    console.info(`[INFO] User: ${username}`);\n});\n\nserver.listen(3000, '127.0.0.1', () => {});\n\n```\n\n## References\n* OWASP: [Log Injection](https://www.owasp.org/index.php/Log_Injection).\n* Common Weakness Enumeration: [CWE-117](https://cwe.mitre.org/data/definitions/117.html).\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:javascript-typescript\",\"language\":\"javascript-typescript\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:javascript-typescript","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Log entry depends on a user-provided value."},"location":{"path":"packages/api/src/server/rest.ts","start_line":267,"end_line":267,"start_column":72,"end_column":80},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/110/instances","dismissal_approved_by":null},{"number":109,"created_at":"2025-03-04T16:20:38Z","updated_at":"2025-03-04T16:20:38Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/109","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/109","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"js/log-injection","severity":"error","description":"Log injection","name":"js/log-injection","tags":["external/cwe/cwe-117","security"],"full_description":"Building log entries from user-controlled sources is vulnerable to insertion of forged log entries by a malicious user.","help":"# Log injection\nIf unsanitized user input is written to a log entry, a malicious user may be able to forge new log entries.\n\nForgery can occur if a user provides some input with characters that are interpreted when the log output is displayed. If the log is displayed as a plain text file, then new line characters can be used by a malicious user. If the log is displayed as HTML, then arbitrary HTML may be included to spoof log entries.\n\n\n## Recommendation\nUser input should be suitably sanitized before it is logged.\n\nIf the log entries are in plain text then line breaks should be removed from user input, using `String.prototype.replace` or similar. Care should also be taken that user input is clearly marked in log entries.\n\nFor log entries that will be displayed in HTML, user input should be HTML-encoded before being logged, to prevent forgery and other forms of HTML injection.\n\n\n## Example\nIn the first example, a username, provided by the user, is logged using \\`console.info\\`. In the first case, it is logged without any sanitization. In the second case, the username is used to build an error that is logged using \\`console.error\\`. If a malicious user provides \\`username=Guest%0a\\[INFO\\]+User:+Admin%0a\\` as a username parameter, the log entry will be splitted in two different lines, where the second line will be \\`\\[INFO\\]+User:+Admin\\`.\n\n\n```javascript\nconst http = require('http');\nconst url = require('url');\n\nconst server = http.createServer((req, res) => {\n    let q = url.parse(req.url, true);\n\n    console.info(`[INFO] User: ${q.query.username}`); // BAD: User input logged as-is\n})\n\nserver.listen(3000, '127.0.0.1', () => {});\n\n```\nIn the second example, `String.prototype.replace` is used to ensure no line endings are present in the user input.\n\n\n```javascript\nconst http = require('http');\nconst url = require('url');\n\nconst server = http.createServer((req, res) => {\n    let q = url.parse(req.url, true);\n\n    // GOOD: remove newlines from user controlled input before logging\n    let username = q.query.username.replace(/\\n|\\r/g, \"\");\n\n    console.info(`[INFO] User: ${username}`);\n});\n\nserver.listen(3000, '127.0.0.1', () => {});\n\n```\n\n## References\n* OWASP: [Log Injection](https://www.owasp.org/index.php/Log_Injection).\n* Common Weakness Enumeration: [CWE-117](https://cwe.mitre.org/data/definitions/117.html).\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:javascript-typescript\",\"language\":\"javascript-typescript\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:javascript-typescript","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Log entry depends on a user-provided value."},"location":{"path":"packages/api/src/server/rest.ts","start_line":262,"end_line":262,"start_column":89,"end_column":97},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/109/instances","dismissal_approved_by":null},{"number":108,"created_at":"2025-03-04T16:20:38Z","updated_at":"2025-03-04T16:20:38Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/108","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/108","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"js/insecure-temporary-file","severity":"warning","description":"Insecure temporary file","name":"js/insecure-temporary-file","tags":["external/cwe/cwe-377","external/cwe/cwe-378","security"],"full_description":"Creating a temporary file that is accessible by other users can lead to information disclosure and sometimes remote code execution.","help":"# Insecure temporary file\nTemporary files created in the operating system's temporary directory are by default accessible to other users. In some cases, this can lead to information exposure, or in the worst case, to remote code execution.\n\n\n## Recommendation\nUse a well-tested library like [tmp](https://www.npmjs.com/package/tmp) for creating temporary files. These libraries ensure both that the file is inaccessible to other users and that the file does not already exist.\n\n\n## Example\nThe following example creates a temporary file in the operating system's temporary directory.\n\n\n```javascript\nconst fs = require('fs');\nconst os = require('os');\nconst path = require('path');\n\nconst file = path.join(os.tmpdir(), \"test-\" + (new Date()).getTime() + \".txt\");\nfs.writeFileSync(file, \"content\");\n```\nThe file created above is accessible to other users, and there is no guarantee that the file does not already exist.\n\nThe below example uses the [tmp](https://www.npmjs.com/package/tmp) library to securely create a temporary file.\n\n\n```javascript\nconst fs = require('fs');\nconst tmp = require('tmp');\n\nconst file = tmp.fileSync().name;\nfs.writeFileSync(file, \"content\");\n```\n\n## References\n* Mitre.org: [CWE-377](https://cwe.mitre.org/data/definitions/377.html).\n* NPM: [tmp](https://www.npmjs.com/package/tmp).\n* Common Weakness Enumeration: [CWE-377](https://cwe.mitre.org/data/definitions/377.html).\n* Common Weakness Enumeration: [CWE-378](https://cwe.mitre.org/data/definitions/378.html).\n","security_severity_level":"high"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:javascript-typescript\",\"language\":\"javascript-typescript\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:javascript-typescript","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Insecure creation of file in the os temp dir."},"location":{"path":"packages/api/src/scripts/monthly.ts","start_line":32,"end_line":32,"start_column":17,"end_column":24},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/108/instances","dismissal_approved_by":null},{"number":107,"created_at":"2025-03-04T16:20:38Z","updated_at":"2025-03-04T16:20:38Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/107","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/107","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"js/insecure-temporary-file","severity":"warning","description":"Insecure temporary file","name":"js/insecure-temporary-file","tags":["external/cwe/cwe-377","external/cwe/cwe-378","security"],"full_description":"Creating a temporary file that is accessible by other users can lead to information disclosure and sometimes remote code execution.","help":"# Insecure temporary file\nTemporary files created in the operating system's temporary directory are by default accessible to other users. In some cases, this can lead to information exposure, or in the worst case, to remote code execution.\n\n\n## Recommendation\nUse a well-tested library like [tmp](https://www.npmjs.com/package/tmp) for creating temporary files. These libraries ensure both that the file is inaccessible to other users and that the file does not already exist.\n\n\n## Example\nThe following example creates a temporary file in the operating system's temporary directory.\n\n\n```javascript\nconst fs = require('fs');\nconst os = require('os');\nconst path = require('path');\n\nconst file = path.join(os.tmpdir(), \"test-\" + (new Date()).getTime() + \".txt\");\nfs.writeFileSync(file, \"content\");\n```\nThe file created above is accessible to other users, and there is no guarantee that the file does not already exist.\n\nThe below example uses the [tmp](https://www.npmjs.com/package/tmp) library to securely create a temporary file.\n\n\n```javascript\nconst fs = require('fs');\nconst tmp = require('tmp');\n\nconst file = tmp.fileSync().name;\nfs.writeFileSync(file, \"content\");\n```\n\n## References\n* Mitre.org: [CWE-377](https://cwe.mitre.org/data/definitions/377.html).\n* NPM: [tmp](https://www.npmjs.com/package/tmp).\n* Common Weakness Enumeration: [CWE-377](https://cwe.mitre.org/data/definitions/377.html).\n* Common Weakness Enumeration: [CWE-378](https://cwe.mitre.org/data/definitions/378.html).\n","security_severity_level":"high"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:javascript-typescript\",\"language\":\"javascript-typescript\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:javascript-typescript","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Insecure creation of file in the os temp dir."},"location":{"path":"packages/api/src/scripts/daily.ts","start_line":32,"end_line":32,"start_column":17,"end_column":24},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/107/instances","dismissal_approved_by":null},{"number":106,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/106","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/106","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/ui.yml","start_line":65,"end_line":80,"start_column":5,"end_column":59},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/106/instances","dismissal_approved_by":null},{"number":105,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/105","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/105","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/ui.yml","start_line":49,"end_line":64,"start_column":7,"end_column":3},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/105/instances","dismissal_approved_by":null},{"number":104,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/104","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/104","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/api.yml","start_line":152,"end_line":167,"start_column":5,"end_column":60},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/104/instances","dismissal_approved_by":null},{"number":103,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/103","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/103","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/ui.yml","start_line":31,"end_line":48,"start_column":5,"end_column":3},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/103/instances","dismissal_approved_by":null},{"number":102,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/102","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/102","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/ui.yml","start_line":16,"end_line":30,"start_column":5,"end_column":3},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/102/instances","dismissal_approved_by":null},{"number":101,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/101","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/101","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/graphql.yml","start_line":6,"end_line":18,"start_column":5,"end_column":34},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/101/instances","dismissal_approved_by":null},{"number":100,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/100","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/100","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/api.yml","start_line":102,"end_line":151,"start_column":7,"end_column":3},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/100/instances","dismissal_approved_by":null},{"number":99,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/99","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/99","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/gitguardian.yml","start_line":12,"end_line":26,"start_column":5,"end_column":67},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/99/instances","dismissal_approved_by":null},{"number":98,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/98","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/98","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/doc.yml","start_line":13,"end_line":26,"start_column":5,"end_column":61},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/98/instances","dismissal_approved_by":null},{"number":97,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/97","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/97","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/deploy.yml","start_line":40,"end_line":48,"start_column":5,"end_column":34},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/97/instances","dismissal_approved_by":null},{"number":96,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/96","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/96","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/deploy.yml","start_line":29,"end_line":39,"start_column":5,"end_column":3},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/96/instances","dismissal_approved_by":null},{"number":95,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/95","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/95","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/common.yml","start_line":42,"end_line":54,"start_column":5,"end_column":32},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/95/instances","dismissal_approved_by":null},{"number":94,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/94","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/94","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/api.yml","start_line":62,"end_line":101,"start_column":7,"end_column":3},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/94/instances","dismissal_approved_by":null},{"number":93,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/93","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/93","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/deploy.yml","start_line":9,"end_line":28,"start_column":5,"end_column":3},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/93/instances","dismissal_approved_by":null},{"number":92,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/92","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/92","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/common.yml","start_line":24,"end_line":41,"start_column":5,"end_column":3},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/92/instances","dismissal_approved_by":null},{"number":91,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/91","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/91","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/ci.yml","start_line":49,"end_line":58,"start_column":5,"end_column":34},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/91/instances","dismissal_approved_by":null},{"number":90,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/90","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/90","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/ci.yml","start_line":44,"end_line":48,"start_column":5,"end_column":3},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/90/instances","dismissal_approved_by":null},{"number":89,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/89","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/89","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/ci.yml","start_line":42,"end_line":43,"start_column":5,"end_column":3},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/89/instances","dismissal_approved_by":null},{"number":88,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/88","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/88","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/api.yml","start_line":44,"end_line":61,"start_column":5,"end_column":3},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/88/instances","dismissal_approved_by":null},{"number":87,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/87","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/87","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/common.yml","start_line":10,"end_line":23,"start_column":5,"end_column":3},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/87/instances","dismissal_approved_by":null},{"number":86,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/86","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/86","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/ci.yml","start_line":38,"end_line":41,"start_column":5,"end_column":3},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/86/instances","dismissal_approved_by":null},{"number":85,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/85","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/85","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/ci.yml","start_line":32,"end_line":37,"start_column":5,"end_column":3},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/85/instances","dismissal_approved_by":null},{"number":84,"created_at":"2025-03-04T16:19:31Z","updated_at":"2025-03-04T16:19:32Z","url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/84","html_url":"https://github.com/MTES-MCT/camino/security/code-scanning/84","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"actions/missing-workflow-permissions","severity":"warning","description":"Workflow does not contain permissions","name":"actions/missing-workflow-permissions","tags":["actions","external/cwe/cwe-275","maintainability","security"],"full_description":"Workflows should contain permissions to provide a clear understanding has permissions to run the workflow.","help":"# Actions Job and Workflow Permissions are not set\n\n## Description\n\nIf a GitHub Actions job or workflow has no explicit permissions set, then the repository permissions are used. Repositories created under organizations inherit the organization permissions. The organizations or repositories created before February 2023 have the default permissions set to read-write. Often these permissions do not adhere to the principle of least privilege and can be reduced to read-only, leaving the `write` permission only to a specific types as `issues: write` or `pull-requests: write`.\n\n## Recommendations\n\nAdd the `permissions` key to the job or the root of workflow (in this case it is applied to all jobs in the workflow that do not have their own `permissions` key) and assign the least privileges required to complete the task:\n\n```yaml\nname: \"My workflow\"\npermissions:\n  contents: read\n  pull-requests: write\n```\n\nor\n\n```yaml\njobs:\n  my-job:\n    permissions:\n      contents: read\n      pull-requests: write\n```\n\n## References\n\n- [Assigning permissions to jobs](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/assigning-permissions-to-jobs)\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.20.5"},"most_recent_instance":{"ref":"refs/heads/master","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:actions\",\"language\":\"actions\",\"runner\":\"[\\\"ubuntu-22.04\\\"]\"}","category":"/language:actions","state":"open","commit_sha":"efade14f9430b601ab189c045bb5142c7da5d66d","message":{"text":"Actions Job or Workflow does not set permissions"},"location":{"path":".github/workflows/cd.yml","start_line":43,"end_line":48,"start_column":5,"end_column":100},"classifications":[]},"instances_url":"https://api.github.com/repos/MTES-MCT/camino/code-scanning/alerts/84/instances","dismissal_approved_by":null}]}]}